import 'package:instagram_clone/app/locator.dart';import 'package:instagram_clone/models/check_box_model.dart';import 'package:instagram_clone/models/global_data.dart';import 'package:instagram_clone/models/gnerate_link_model.dart';import 'package:instagram_clone/services/upload_data_service.dart';import 'package:intl/intl.dart';import 'package:stacked/stacked.dart';import 'package:stacked_services/stacked_services.dart';class HomeViewModel extends FutureViewModel {  final HomeDataService homeDataService = locator<HomeDataService>();  final DialogService _dialogService = locator<DialogService>();  String get title => 'Instagram';  ///retrieving home data list  Future getHomeData() async {    setBusy(true);    var result = await homeDataService.getHomeData();    setBusy(false);    if (result.statusCode != 200) {      await _dialogService.showDialog(        title: 'Network Failure',        description: 'Something went wrong',      );    }  }  List get productsList => GlobalData.productsList;  List<CheckBoxModel> checkBoxItems = [    CheckBoxModel(title: 'Payment'),    CheckBoxModel(title: 'Subscription')  ];  List<CheckBoxModel> get checkBoxTitle => checkBoxItems;  ///adding more products  void addProduct() {    GlobalData.productsList.add(Product());    print(GlobalData.productsList.length);    notifyListeners();  }  int total = 0;  int itemCount = 0;  List<String> durations = [];  ///calculate total aed  void getTotalAED() {    total = 0;    GlobalData.productsList?.forEach((element) {      total += element.total;    });    notifyListeners();  }  int get totalAed => total;  int get itemCounter => itemCount;  List get getDuration => durations;  ///updateCheckBox  void updateCheckBox(bool value, int index) {    checkBoxItems?.forEach((element) {      element.isChecked = false;    });    checkBoxItems[index].isChecked = value;    GlobalData.generateLinkModel.type =        checkBoxItems[0].isChecked ? 'SubscriptionÂ ' : 'PartialPayment';    notifyListeners();  }  ///item Counter  void updateItemCounter(int count) {    itemCount = count;    durations = List.generate(        count, (index) => DateFormat('yyyy-MM-dd').format(DateTime.now()));    notifyListeners();  }  ///updateDuration  void updateDuration(int index, String date) {    durations[index] = date;    notifyListeners();  }  @override  Future futureToRun() => getHomeData();  ///generate// Future generate() async {//   if (GlobalData.generateLinkModel?.name == null ||//       GlobalData.generateLinkModel?.emailId == null ||//       GlobalData.generateLinkModel?.phone == null ||//       GlobalData.generateLinkModel?.merchantVat == null) {//     await _dialogService.showDialog(//       description: 'Please add basic details',//     );//   } else {//     setBusy(true);////     var result = await uploadDataService.getHomeData();////     setBusy(false);//     if (result.statusCode == 200) {//       await _dialogService.showDialog(//         title: 'Success',//         description: result.data['message'],//       );//     } else {//       await _dialogService.showDialog(//         title: 'Upload Failure',//         description: 'Something went wrong',//       );//     }//   }// }}